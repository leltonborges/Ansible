---
- name: 'Configuration mysql'
  hosts: database
  handlers:
          - name: restart mysql
            service:
                    name: mysql
                    state: restarted
  tasks:
          - name: 'install mariadb-server'
            apt:
                    package:
                            - mariadb-server
                    state: present
                    update_cache: true

          - name: 'Create database'
            mysql_db:
                    name: "{{ var_wp_name_db }}"
                    login_user: root
                    login_password: root
                    state: present

          - name: 'Create user from mysql database'
            mysql_user:
                    login_user: root
                    login_password: root
                    name: "{{ var_wp_name_user }}"
                    password: "{{ var_wp_password_db }}"
                    priv: "{{ var_wp_name_db }}.*:ALL"
                    state: present
                    host: "{{ item }}"
            with_items:        
                    - 'localhost'
                    - '127.0.0.1'
                    - "{{ var_wp_db_ip }}" #ip da maquina que precisa acessa este DB
          - name: 'Copy file local mysql.cnf configurated for wordpress host access remote'
            ansible.builtin.copy:
                    src: '/home/server/alura/files/conf/mysql/50-server.cnf'
                    dest: '/etc/mysql/mariadb.conf.d/50-server.cnf' 
            notify:
                    - restart mysql

- name: 'Configuration webserver'
  hosts: wordpress
  handlers:
          - name: Restart apache2
            service: 
                name: apache2
                state: restarted
            become: yes    
  tasks:

#          - name: 'Download wordpress'
#            get_url:
#                    url: https://wordpress.org/latest.tar.gz
#                    dest: /tmp/wordpress.tar.gz

          - name: 'Extract wordpress'
            ansible.builtin.unarchive:
                    src: '/tmp/wordpress.tar.gz' 
                    dest: '/var/www/'
                    remote_src: yes
            become: yes

          - name: 'Copy file wp-config-sample for wp-config'
            ansible.builtin.copy:
                    src: "{{ var_wp_dir_installation }}/wp-config-sample.php"
                    dest: "{{ var_wp_dir_installation }}/wp-config.php"
                    remote_src: yes
                    owner: www-data
                    group: www-data
                    mode: 0644

          - name: 'Replace configuration database data in wp-config.php'
            ansible.builtin.replace:
                    path: "{{ var_wp_dir_installation }}/wp-config.php"
                    regexp: "{{ item.regex }}"
                    replace: "{{item.value}}"
            with_items:
                    - {regex: 'database_name_here', value: "{{ var_wp_name_db }}"}
                    - {regex: 'username_here', value: "{{ var_wp_name_user }}"}
                    - {regex: 'password_here', value: "{{ var_wp_password_db }}"}
                    - {regex: 'localhost', value: "{{ var_wp_host_ip }}"}
                  # - {regex: 'localhost', value: '10.40.1.20'} <- x.x.x.x serÃ¡ o ip da maquina que tem o banco de dados 

          - name: 'Configuration apache2 from serve wordpress'
            template:
                    src: '/home/server/alura/files/conf/apache2/000-default.conf.j2'
                    dest: '/etc/apache2/sites-available/000-default.conf'
            notify:
                    - Restart apache2

          #- name: 'Configuration apache2 from serve wordpress'
          #  copy:
          #          src: '/home/server/alura/files/conf/apache2/000-default.conf'
          #          dest: '/etc/apache2/sites-available/000-default.conf'
          #  notify:
          #          - Restart apache2



